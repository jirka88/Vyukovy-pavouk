// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using vyukovy_pavouk.DBContexts;

#nullable disable

namespace vyukovypavouk.Migrations
{
    [DbContext(typeof(DBContext))]
    partial class DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("vyukovy_pavouk.Data.Assignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ChapterID")
                        .HasColumnType("int");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.HasKey("Id");

                    b.HasIndex("ChapterID");

                    b.ToTable("Assignment");
                });

            modelBuilder.Entity("vyukovy_pavouk.Data.Completion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ChapterID")
                        .HasColumnType("int");

                    b.Property<int>("GroupID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Completion");
                });

            modelBuilder.Entity("vyukovy_pavouk.Data.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("TmGroup")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.HasKey("Id");

                    b.ToTable("Group");
                });

            modelBuilder.Entity("vyukovy_pavouk.Data.GroupStudent", b =>
                {
                    b.Property<int>("GroupID")
                        .HasColumnType("int");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.HasKey("GroupID", "StudentID");

                    b.HasIndex("StudentID");

                    b.ToTable("GroupStudent");
                });

            modelBuilder.Entity("vyukovy_pavouk.Data.Chapter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Perex")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("SubjectID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubjectID");

                    b.ToTable("Chapters");
                });

            modelBuilder.Entity("vyukovy_pavouk.Data.ChapterPrerequisite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ChapterID")
                        .HasColumnType("int");

                    b.Property<int>("PrerequisiteID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChapterID");

                    b.HasIndex("PrerequisiteID");

                    b.ToTable("ChapterPrerequisite");
                });

            modelBuilder.Entity("vyukovy_pavouk.Data.Link", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ChapterID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.HasKey("Id");

                    b.HasIndex("ChapterID");

                    b.ToTable("Link");
                });

            modelBuilder.Entity("vyukovy_pavouk.Data.Prerequisite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("PrerequisiteID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Prerequisite");
                });

            modelBuilder.Entity("vyukovy_pavouk.Data.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("vyukovy_pavouk.Data.StudentCompletion", b =>
                {
                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.Property<int>("CompletionID")
                        .HasColumnType("int");

                    b.Property<bool>("Success")
                        .HasColumnType("bit");

                    b.HasKey("StudentID", "CompletionID");

                    b.HasIndex("CompletionID");

                    b.ToTable("StudentCompletion");
                });

            modelBuilder.Entity("vyukovy_pavouk.Data.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Created")
                        .IsRequired()
                        .HasMaxLength(62)
                        .HasColumnType("nvarchar(62)");

                    b.Property<int>("GroupID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("Private")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("GroupID")
                        .IsUnique();

                    b.ToTable("Subject");
                });

            modelBuilder.Entity("vyukovy_pavouk.Data.Assignment", b =>
                {
                    b.HasOne("vyukovy_pavouk.Data.Chapter", "Chapter")
                        .WithMany("Assignments")
                        .HasForeignKey("ChapterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chapter");
                });

            modelBuilder.Entity("vyukovy_pavouk.Data.GroupStudent", b =>
                {
                    b.HasOne("vyukovy_pavouk.Data.Group", "Group")
                        .WithMany("GroupStudents")
                        .HasForeignKey("GroupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vyukovy_pavouk.Data.Student", "Student")
                        .WithMany("GroupStudents")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("vyukovy_pavouk.Data.Chapter", b =>
                {
                    b.HasOne("vyukovy_pavouk.Data.Subject", "Subject")
                        .WithMany("Chapters")
                        .HasForeignKey("SubjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("vyukovy_pavouk.Data.ChapterPrerequisite", b =>
                {
                    b.HasOne("vyukovy_pavouk.Data.Chapter", "Chapter")
                        .WithMany("ChapterPrerequisites")
                        .HasForeignKey("ChapterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vyukovy_pavouk.Data.Prerequisite", "Prerequisite")
                        .WithMany("ChapterPrerequisites")
                        .HasForeignKey("PrerequisiteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chapter");

                    b.Navigation("Prerequisite");
                });

            modelBuilder.Entity("vyukovy_pavouk.Data.Link", b =>
                {
                    b.HasOne("vyukovy_pavouk.Data.Chapter", "Chapter")
                        .WithMany("Links")
                        .HasForeignKey("ChapterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chapter");
                });

            modelBuilder.Entity("vyukovy_pavouk.Data.StudentCompletion", b =>
                {
                    b.HasOne("vyukovy_pavouk.Data.Completion", "Completion")
                        .WithMany("StudentCompletions")
                        .HasForeignKey("CompletionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vyukovy_pavouk.Data.Student", "Student")
                        .WithMany("StudentCompletion")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Completion");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("vyukovy_pavouk.Data.Subject", b =>
                {
                    b.HasOne("vyukovy_pavouk.Data.Group", "Group")
                        .WithOne("Subject")
                        .HasForeignKey("vyukovy_pavouk.Data.Subject", "GroupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("vyukovy_pavouk.Data.Completion", b =>
                {
                    b.Navigation("StudentCompletions");
                });

            modelBuilder.Entity("vyukovy_pavouk.Data.Group", b =>
                {
                    b.Navigation("GroupStudents");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("vyukovy_pavouk.Data.Chapter", b =>
                {
                    b.Navigation("Assignments");

                    b.Navigation("ChapterPrerequisites");

                    b.Navigation("Links");
                });

            modelBuilder.Entity("vyukovy_pavouk.Data.Prerequisite", b =>
                {
                    b.Navigation("ChapterPrerequisites");
                });

            modelBuilder.Entity("vyukovy_pavouk.Data.Student", b =>
                {
                    b.Navigation("GroupStudents");

                    b.Navigation("StudentCompletion");
                });

            modelBuilder.Entity("vyukovy_pavouk.Data.Subject", b =>
                {
                    b.Navigation("Chapters");
                });
#pragma warning restore 612, 618
        }
    }
}
