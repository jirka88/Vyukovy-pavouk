@page "/nastaveni"
@layout UserLayout
@using Azure.Core;
@using Microsoft.Graph;
@using Newtonsoft.Json;
@using vyukovy_pavouk.Data;
@using Microsoft.AspNetCore.Components.Forms
@inject TeamsFx teamsfx
@inject MicrosoftTeams MicrosoftTeams
@inject HttpClient Http
@inject IToastService upozorneni;
@inject NavigationManager MyNavigationManager
@inject IUserToken UserToken
@inject IGroupToken GroupToken
@inject Solutaris.InfoWARE.ProtectedBrowserStorage.Services.IIWSessionStorageService sessionStorage
<div class="container">
<h1 class="text-center py-2 pb-4">Nastavení</h1>
@if (!IsLoaded)
	{
		<div style="display: flex; justify-content: center; align-items: center; height: 50vh;">
			<FluentProgressRing />
		</div>
	}
	else {
		<fluent-dialog Hidden="@ModelHidden">
					<div class="d-flex justify-content-center align-items-center h-100 w-100 flex-column">
						<svg id="Layer_1" style="width: 20%" class="pb-5" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 105.16 122.88"><defs><style>.cls-1{fill-rule:evenodd;}</style></defs><title>delete</title><path class="cls-1" d="M11.17,37.16H94.65a8.4,8.4,0,0,1,2,.16,5.93,5.93,0,0,1,2.88,1.56,5.43,5.43,0,0,1,1.64,3.34,7.65,7.65,0,0,1-.06,1.44L94,117.31v0l0,.13,0,.28v0a7.06,7.06,0,0,1-.2.9v0l0,.06v0a5.89,5.89,0,0,1-5.47,4.07H17.32a6.17,6.17,0,0,1-1.25-.19,6.17,6.17,0,0,1-1.16-.48h0a6.18,6.18,0,0,1-3.08-4.88l-7-73.49a7.69,7.69,0,0,1-.06-1.66,5.37,5.37,0,0,1,1.63-3.29,6,6,0,0,1,3-1.58,8.94,8.94,0,0,1,1.79-.13ZM5.65,8.8H37.12V6h0a2.44,2.44,0,0,1,0-.27,6,6,0,0,1,1.76-4h0A6,6,0,0,1,43.09,0H62.46l.3,0a6,6,0,0,1,5.7,6V6h0V8.8h32l.39,0a4.7,4.7,0,0,1,4.31,4.43c0,.18,0,.32,0,.5v9.86a2.59,2.59,0,0,1-2.59,2.59H2.59A2.59,2.59,0,0,1,0,23.62V13.53H0a1.56,1.56,0,0,1,0-.31v0A4.72,4.72,0,0,1,3.88,8.88,10.4,10.4,0,0,1,5.65,8.8Zm42.1,52.7a4.77,4.77,0,0,1,9.49,0v37a4.77,4.77,0,0,1-9.49,0v-37Zm23.73-.2a4.58,4.58,0,0,1,5-4.06,4.47,4.47,0,0,1,4.51,4.46l-2,37a4.57,4.57,0,0,1-5,4.06,4.47,4.47,0,0,1-4.51-4.46l2-37ZM25,61.7a4.46,4.46,0,0,1,4.5-4.46,4.58,4.58,0,0,1,5,4.06l2,37a4.47,4.47,0,0,1-4.51,4.46,4.57,4.57,0,0,1-5-4.06l-2-37Z"/></svg>
					<h5 class="text-center pb-3">Opravdu si přejete resetovat skupinu?</h5>
					<p class="text-center pb-3">Možnost resetovat za @count s</p>
					<div>
						<fluent-button class="dialog-btn" @onclick="CloseDialogReset">Zavřít</fluent-button>
						<fluent-button appearance="accent" class="dialog-btn" Disabled="@vypnutiTlacitkaReset" @onclick="ResetSkupinu">Resetovat</fluent-button>
					</div>
					</div>
				</fluent-dialog>
				@if(hledanyPredmet != null) {
					<fluent-dialog Hidden="@shodaDialog">
			<div class="d-flex justify-content-center align-items-center h-100 w-100 flex-column">
				<h5 class="text-center">Předmět s názvem @hledanyPredmet.Nazev už existuje. Zkuste jiný název!</h5>
				<?xml version="1.0" encoding="utf-8" ?>	
				<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 1000 1000" enable-background="new 0 0 1000 1000" xml:space="preserve">
				<metadata> Svg Vector Icons : http://www.onlinewebfonts.com/icon </metadata>
				<g><path d="M939.4,906.7H60.6c-31.7,0-50.6-25.9-50.6-50.9V144.2c0-31.9,25.8-50.9,50.6-50.9h878.7c31.7,0,50.6,25.9,50.6,50.9v711.7C990,887.7,964.3,906.7,939.4,906.7z M84.3,832h831.4V168H84.3V832z" /><path d="M327.8,405.9c-7.9,0-15.8-3-21.9-9.1l-80.5-81c-12.1-12.2-12.1-31.9,0-44c12.1-12.2,31.7-12.2,43.8,0l80.5,81c12.1,12.2,12.1,31.9,0,44C343.6,402.9,335.7,405.9,327.8,405.9z" /><path d="M247.3,405.9c-7.9,0-15.8-3-21.9-9.1c-12.1-12.2-12.1-31.9,0-44l80.5-81c12.1-12.2,31.7-12.2,43.8,0c12.1,12.2,12.1,31.9,0,44l-80.5,81C263.1,402.9,255.2,405.9,247.3,405.9z" /><path d="M752.7,406c-7.9,0-15.8-3-21.9-9.1l-80.5-81c-12.1-12.2-12.1-31.9,0-44c12.1-12.2,31.7-12.2,43.8,0l80.5,81c12.1,12.2,12.1,31.9,0,44C768.6,402.9,760.6,406,752.7,406z" /><path d="M672.2,405.9c-7.9,0-15.8-3-21.9-9.1c-12.1-12.2-12.1-31.9,0-44l80.5-81c12.1-12.2,31.7-12.2,43.8,0c12.1,12.2,12.1,31.9,0,44l-80.5,81C688.1,402.9,680.1,405.9,672.2,405.9z" /><path d="M772.4,711.1H227.6c-17.1,0-31-13.9-31-31.1c0-17.2,13.9-31.1,31-31.1h544.8c17.1,0,31,13.9,31,31.1C803.3,697.2,789.5,711.1,772.4,711.1z" /><path d="M542.1,711.1v58.7c0,0,0,42.2,61.9,42.2h66.6c0,0,61.9,0,61.9-42.2v-58.7H542.1z" /></g>
				</svg>
				<div>
					<fluent-button @onclick="@CloseDialogShoda" appearance="accent">Zavřít</fluent-button>
				</div>
			</div>
		</fluent-dialog>
				}	
			<fluent-dialog Hidden="@ModelHiddenDelete">
				@if (!SwitchDelete)
			   {
				   <div class="d-flex justify-content-center align-items-center h-100 w-100 flex-column">
						<svg id="Layer_1" style="width: 20%" class="pb-5" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 105.16 122.88"><defs><style>.cls-1{fill-rule:evenodd;}</style></defs><title>delete</title><path class="cls-1" d="M11.17,37.16H94.65a8.4,8.4,0,0,1,2,.16,5.93,5.93,0,0,1,2.88,1.56,5.43,5.43,0,0,1,1.64,3.34,7.65,7.65,0,0,1-.06,1.44L94,117.31v0l0,.13,0,.28v0a7.06,7.06,0,0,1-.2.9v0l0,.06v0a5.89,5.89,0,0,1-5.47,4.07H17.32a6.17,6.17,0,0,1-1.25-.19,6.17,6.17,0,0,1-1.16-.48h0a6.18,6.18,0,0,1-3.08-4.88l-7-73.49a7.69,7.69,0,0,1-.06-1.66,5.37,5.37,0,0,1,1.63-3.29,6,6,0,0,1,3-1.58,8.94,8.94,0,0,1,1.79-.13ZM5.65,8.8H37.12V6h0a2.44,2.44,0,0,1,0-.27,6,6,0,0,1,1.76-4h0A6,6,0,0,1,43.09,0H62.46l.3,0a6,6,0,0,1,5.7,6V6h0V8.8h32l.39,0a4.7,4.7,0,0,1,4.31,4.43c0,.18,0,.32,0,.5v9.86a2.59,2.59,0,0,1-2.59,2.59H2.59A2.59,2.59,0,0,1,0,23.62V13.53H0a1.56,1.56,0,0,1,0-.31v0A4.72,4.72,0,0,1,3.88,8.88,10.4,10.4,0,0,1,5.65,8.8Zm42.1,52.7a4.77,4.77,0,0,1,9.49,0v37a4.77,4.77,0,0,1-9.49,0v-37Zm23.73-.2a4.58,4.58,0,0,1,5-4.06,4.47,4.47,0,0,1,4.51,4.46l-2,37a4.57,4.57,0,0,1-5,4.06,4.47,4.47,0,0,1-4.51-4.46l2-37ZM25,61.7a4.46,4.46,0,0,1,4.5-4.46,4.58,4.58,0,0,1,5,4.06l2,37a4.47,4.47,0,0,1-4.51,4.46,4.57,4.57,0,0,1-5-4.06l-2-37Z"/></svg>
					<h5 class="text-center pb-3 text-danger">Opravdu si přejete smazat strukturu?</h5>
					<p>Je nutné zadat váš školní E-mail.</p>
					<input type="text" class="mb-3"  placeholder="E-mail" @bind-value="@EmailOvereni" @bind-value:event="oninput" @onkeyup="CheckEmail">
					<div>
						<fluent-button class="dialog-btn" @onclick="CloseDialogDelete">Zavřít</fluent-button>
						<fluent-button appearance="accent" class="dialog-btn" Disabled="@vypnutiTlacitkaPokracuj" @onclick="PokracujVSmazani">Pokračovat</fluent-button>
					</div>
					</div>
			   }
			   else {
				   <div class="d-flex justify-content-center align-items-center h-100 w-100 flex-column">
						<svg id="Layer_1" style="width: 20%" class="pb-5" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 105.16 122.88"><defs><style>.cls-1{fill-rule:evenodd;}</style></defs><title>delete</title><path class="cls-1" d="M11.17,37.16H94.65a8.4,8.4,0,0,1,2,.16,5.93,5.93,0,0,1,2.88,1.56,5.43,5.43,0,0,1,1.64,3.34,7.65,7.65,0,0,1-.06,1.44L94,117.31v0l0,.13,0,.28v0a7.06,7.06,0,0,1-.2.9v0l0,.06v0a5.89,5.89,0,0,1-5.47,4.07H17.32a6.17,6.17,0,0,1-1.25-.19,6.17,6.17,0,0,1-1.16-.48h0a6.18,6.18,0,0,1-3.08-4.88l-7-73.49a7.69,7.69,0,0,1-.06-1.66,5.37,5.37,0,0,1,1.63-3.29,6,6,0,0,1,3-1.58,8.94,8.94,0,0,1,1.79-.13ZM5.65,8.8H37.12V6h0a2.44,2.44,0,0,1,0-.27,6,6,0,0,1,1.76-4h0A6,6,0,0,1,43.09,0H62.46l.3,0a6,6,0,0,1,5.7,6V6h0V8.8h32l.39,0a4.7,4.7,0,0,1,4.31,4.43c0,.18,0,.32,0,.5v9.86a2.59,2.59,0,0,1-2.59,2.59H2.59A2.59,2.59,0,0,1,0,23.62V13.53H0a1.56,1.56,0,0,1,0-.31v0A4.72,4.72,0,0,1,3.88,8.88,10.4,10.4,0,0,1,5.65,8.8Zm42.1,52.7a4.77,4.77,0,0,1,9.49,0v37a4.77,4.77,0,0,1-9.49,0v-37Zm23.73-.2a4.58,4.58,0,0,1,5-4.06,4.47,4.47,0,0,1,4.51,4.46l-2,37a4.57,4.57,0,0,1-5,4.06,4.47,4.47,0,0,1-4.51-4.46l2-37ZM25,61.7a4.46,4.46,0,0,1,4.5-4.46,4.58,4.58,0,0,1,5,4.06l2,37a4.47,4.47,0,0,1-4.51,4.46,4.57,4.57,0,0,1-5-4.06l-2-37Z"/></svg>
					<h5 class="text-center pb-3 text-danger fw-bold">Tato akce je nenavratná!</h5>
					<p class="text-center">Dojde ke smazání celé struktury včetně jejích kapitol. Všude ve skupinách, kde je tato struktura použita, bude patřičně resetovaná!</p>
					<p class="text-center pb-3 fw-bold">Možnost smazat za @count s</p>
					<div>
						<fluent-button appearance="accent" class="dialog-btn" @onclick="CloseDialogDelete">Zavřít</fluent-button>
						<fluent-button class="dialog-btn" Disabled="@vypnutiTlacitkaDelete" @onclick="DeleteStruktura">Smazat</fluent-button>
					</div>
					</div>
			   }
					
				</fluent-dialog>
		<div class="nastaveni">
					<hr>
	<div class="row d-flex justify-content-center align-items-center pt-2 pb-2 w-100">
		<div class="col-2 d-flex align-items-center fw-bold">
			Změnit název skupiny: 
		</div>
	
		<div class="col-8">
				<EditForm Model="@skupina" OnValidSubmit="@Zmen" class="d-flex gap-4">
				<FluentValidationValidator />
				<InputText class="w-75" type="text" placeholder="Název předmětu" maxlength="30" @bind-Value="@skupina.predmet.Nazev"></InputText>
				<ValidationMessage For="@(()=>@skupina.predmet.Nazev)" />		
				<div class="d-flex align-items-center">
			<fluent-button appearance="accent" type="submit" disabled="@vypniTlacitka">Upravit</fluent-button>		
			</div>
		</EditForm>
	</div>
</div>
	<hr>
	<div class="row d-flex justify-content-center align-items-center pt-2 pb-2 w-100">
		<div class="col-2 d-flex align-items-center fw-bold">
			Resetovat skupinu: 
		</div>
	
		<div class="col-6">	
				<div class="d-flex align-items-center">
			<fluent-button appearance="accent" disabled="@vypniTlacitka" @onclick="@ShowResetDialog">Resetovat</fluent-button>		
			</div>
	</div>
		<div class="col-2 d-flex align-items-center justify-content-center">
			<div class="circle d-flex align-items-center justify-content-center" id="anchor1">
				<p class="mb-0">?</p>
				</div>
				<!--<fluent-tooltip Anchor="anchor1" Position=TooltipPosition.Bottom>Znamená, že tuto skupinu resetuje tím páde vymaže veškeré splnění studentů a samotné napojení jednotlivých studentů. Struktura (předmět s kapitolamy) zůstavá a lze jí znovu napojit se skupinou. </fluent-tooltip>-->
		</div>
</div>
			<hr>
			@if(UserToken.Profile.Mail == skupina.predmet.Vytvoril) {
				<div class="row d-flex justify-content-center align-items-center pt-2 pb-2 w-100">
				<div class="col-2 d-flex align-items-center fw-bold">
					Smazat strukturu:
				</div>

				<div class="col-6">
					<div class="d-flex align-items-center">
						<fluent-button appearance="accent" disabled="@vypniTlacitka" @onclick="@ShowDeleteDialog">Smazat</fluent-button>
					</div>
				</div>
				<div class="col-2 d-flex align-items-center justify-content-center">
			<div class="circle d-flex align-items-center justify-content-center" id="anchor1">
				<p class="mb-0">?</p>
				</div>
				<fluent-tooltip Anchor="anchor1" Position=TooltipPosition.Bottom>Znamená, že tuto skupinu resetuje tím páde vymaže veškeré splnění studentů a samotné napojení jednotlivých studentů. Struktura (předmět s kapitolamy) zůstavá a lze jí znovu napojit se skupinou. </fluent-tooltip>
		</div>
			</div>
			<hr>
			}
			
	
</div>
	}
</div>
	<style>
	fluent-button {
		width: 100px;
		height: 50px;
	}
	fluent-dialog {
		position: sticky;
		z-index: 11;
	}
	svg {
	width: 50%;
	}
	.circle {
		height: 4em;
		width: 4em;
		border: 2px solid black;
		border-radius: 50%; 
		box-shadow: 6px 3px gray;
		cursor: pointer;
	}
	.circle:hover {
		box-shadow: 6px 3px #464EB8;
	}
	.circle p {
		font-size: 2em;
		font-weight: bold;
	}
</style>
@code {
	int count;
	bool IsLoaded = false;
	bool vypnutiTlacitkaReset = true;
	bool vypniTlacitka = false;
	bool ModelHidden = true;
	bool shodaDialog = true;
	//při mazaní struktury 
	bool ModelHiddenDelete = true;
	bool vypnutiTlacitkaPokracuj = true;
	bool SwitchDelete = false;
	bool vypnutiTlacitkaDelete = true;
	string EmailOvereni = "";

	private System.Timers.Timer timer;
	Skupina skupina = new Skupina();
	List<Predmet> predmety = new List<Predmet>();
	Predmet hledanyPredmet = new Predmet();
	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{

			await UserToken.GetUserAsync(sessionStorage);
			await GroupToken.GetGroupAsync(MicrosoftTeams);
			if (UserToken.Profile == null || UserToken.Profile.JobTitle == "žák školy")
			{
				MyNavigationManager.NavigateTo("/tab");
			}
			else
			{
				//získání skupinu z databáze a jeho navazaného předmětu 
				skupina = await Http.GetFromJsonAsync<Skupina>($"{MyNavigationManager.BaseUri}api/Skupina/" + (GroupToken.teamsContext.TeamId).ToString());
				//získání všech předmětu --> pro kontrolu 
				predmety = await Http.GetFromJsonAsync<List<Predmet>>($"{MyNavigationManager.BaseUri}api/predmet");
				IsLoaded = true;
			}
		}
		StateHasChanged();
	}
	private async void Zmen() {
		vypniTlacitka = true;
		hledanyPredmet = predmety.Where(x => x.Nazev == skupina.predmet.Nazev).SingleOrDefault();
		if(hledanyPredmet != null) {
			shodaDialog = false;
			return;
		}
		await Http.PutAsJsonAsync($"{MyNavigationManager.BaseUri}api/predmet", skupina);
		predmety = await Http.GetFromJsonAsync<List<Predmet>>($"{MyNavigationManager.BaseUri}api/predmet");
		await InvokeAsync(StateHasChanged);
		upozorneni.ShowSuccess("Předmět byl úspěšně přejmenován.", "Úspěch!");
		vypniTlacitka = false;
	}
	private void ShowResetDialog() {
		ModelHidden = false;
		vypniTlacitka = true;
		vypnutiTlacitkaReset = true;
		StartTimer(5);
	}
	private void ShowDeleteDialog() {
		ModelHiddenDelete = false;
		vypniTlacitka = true;
	}
	private void CheckEmail() {
		if(skupina.predmet.Vytvoril != EmailOvereni) {
			vypnutiTlacitkaPokracuj = true;
			return;
		}
		vypnutiTlacitkaPokracuj = false;
	}
	private void PokracujVSmazani() {	
		SwitchDelete = true;
		StartTimer(10);
	}
	private async void DeleteStruktura() {
		await Http.DeleteAsync($"{MyNavigationManager.BaseUri}api/predmet/" + skupina.predmet.Id);
		upozorneni.ShowSuccess("Struktura byla smazaná.", "Úspěch!");
		await Task.Delay(1000);
		MyNavigationManager.NavigateTo("/tab");
	}
	private void CloseDialogReset() {
		ModelHidden = true;
		TurnOnBtn();
	}
	private void CloseDialogDelete() {
		ModelHiddenDelete = true;
		vypnutiTlacitkaPokracuj = true;
		vypnutiTlacitkaDelete = true;
		SwitchDelete = false;
		EmailOvereni = "";
		TurnOnBtn();
	}
	private void CloseDialogShoda() {
		shodaDialog = true;
		TurnOnBtn();
	}
	private async Task ResetSkupinu() {
		vypnutiTlacitkaReset = true;
		await Http.DeleteAsync($"{MyNavigationManager.BaseUri}api/skupina/reset/" + skupina.Id);
		upozorneni.ShowSuccess("MS skupina byla resetovaná.", "Úspěch!");
		await Task.Delay(1000);
		MyNavigationManager.NavigateTo("/tab");
	}
	private void TurnOnBtn() {
		vypniTlacitka = false;
	}
	private void StartTimer(int seconds) {
		count = seconds;
		timer = new System.Timers.Timer(1000);
		timer.Elapsed += CountDownTimer;
		timer.Enabled = true;
	}
	private void CountDownTimer(Object source, System.Timers.ElapsedEventArgs e) {
		if(count > 0) {
			count--;
		}
		else {
			timer.Enabled = false;	
			if(!ModelHidden) {
				vypnutiTlacitkaReset = false;
			}
			else {
				vypnutiTlacitkaDelete = false;
			}
			timer.Close();
			
		}
		InvokeAsync(StateHasChanged);
	}

}
