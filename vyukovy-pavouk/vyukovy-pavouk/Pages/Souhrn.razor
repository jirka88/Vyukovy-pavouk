@page "/souhrn"
@using vyukovy_pavouk.Data
@layout UserLayout
@inject HttpClient Http
@inject MicrosoftTeams MicrosoftTeams
@inject NavigationManager MyNavigationManager
@inject IUserToken UserToken
@inject IGroupToken GroupToken
@inject Solutaris.InfoWARE.ProtectedBrowserStorage.Services.IIWSessionStorageService sessionStorage
@if (IsLoaded)
{
	<h1 class="text-center py-2 pb-4">Souhrn</h1>

	<table class="table table-md my-4">
		<thead>
			<tr>
				<th>Jméno a příjmení</th>
				<th>Splněno <button id="anchor1">?</button>
					<Fluent-Tooltip Anchor="anchor1" Position=TooltipPosition.Bottom>Počet splněných kapitol/Počet všech možných kapitol.</Fluent-Tooltip></th>
				<th>Procent
					<button id="anchor2">?</button>
					<Fluent-Tooltip Anchor="anchor2" Position=TooltipPosition.Bottom>Zobrazuje procentuální splnění.</Fluent-Tooltip>
				</th>
				<th>Více info</th>
			</tr>
		</thead>
		<tbody>
			
				@if(@studenti.Count() > 0) {
				@foreach (var student in studenti)
				{
					<tr>
					<th scope="row">@student.Student.Jmeno @student.Student.Prijmeni</th>
					<td>@student.Student.Splneni.Count()/12</td>
						<td>@CalculateAVG(student.Student.Splneni.Count())%</td>
					<td><fluent-button appearance="accent"><svg width="24" height="24" fill="none" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M14.296 16.294a1 1 0 1 0 1.415 1.414l4.997-5.004a1 1 0 0 0 0-1.413L15.71 6.293a1 1 0 0 0-1.415 1.414L17.59 11H11a8 8 0 0 0-7.996 7.75L3 19a1 1 0 1 0 2 0 6 6 0 0 1 5.775-5.996L11 13h6.586l-3.29 3.294Z" fill="#ffffff" /></svg></fluent-button></td>
				</tr>
				}
				}
				else {
					<tr>
					<td colspan="4">Čekáme na připojení studentů do Teamu.</td>
					</tr>
				}
				
				
			
		</tbody>
	</table>
}
else {
	 <div style="display: flex; justify-content: center; align-items: center; height: 50vh;">
		<FluentProgressRing/>
	</div>
}
@code {
	public bool IsLoaded = false;
	public List<SkupinaStudent> studenti { get; set; }
	public Skupina skupina = new Skupina();
	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{

			await UserToken.GetUserAsync(sessionStorage);
			await GroupToken.GetGroupAsync(MicrosoftTeams);
			if (UserToken.Profile == null)
			{
				MyNavigationManager.NavigateTo("/tab");
			}
			else
			{
				//získání skupiny z databáze
				skupina = await Http.GetFromJsonAsync<Skupina>($"{MyNavigationManager.BaseUri}api/Skupina/" + (GroupToken.teamsContext.TeamId).ToString());
				// získání uživatelů a jejich progres v kapitolách 
				studenti = await Http.GetFromJsonAsync<List<SkupinaStudent>>($"{MyNavigationManager.BaseUri}api/uzivatel/" + Convert.ToInt32(skupina.Id));
				IsLoaded = true;
			}
		}
		StateHasChanged();
	}
	//TO DO vrátit počet kapitol 
	public double CalculateAVG(int PocetSplneni) {
		//vrátí procentuální splnění 
		double vypocet = (Convert.ToDouble(PocetSplneni) / 12) * 100;
		return Math.Round(vypocet);

	}
}
