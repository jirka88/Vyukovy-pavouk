@page "/Kapitola"
@page "/Kapitola/{IdKapitola:int}/{status:bool}"
@using vyukovy_pavouk.Components;
@using vyukovy_pavouk.Data
@inject HttpClient Http
@inject NavigationManager MyNavigationManager
@inject MicrosoftTeams MicrosoftTeams
@layout UserLayout
@inject IUserToken UserToken
@inject IGroupToken GroupToken
@inject Solutaris.InfoWARE.ProtectedBrowserStorage.Services.IIWSessionStorageService sessionStorage
@using Microsoft.Graph;

@if(!IsLoaded) {
	<div style="display: flex; justify-content: center; align-items: center; min-height: 100vh;">
		<FluentProgressRing />
	</div>
}
else {
	<div class="container">
		<div class="kapitola">
			<div class="d-flex pt-5 pb-3 align-items-center main-title">
				<h1 class="text-left font-weight-bold flex-grow-1">@kapitola.Název</h1>
				@if (UserToken.Profile.JobTitle == null)
			   {
				   <div class="admin-btn d-flex gap-3">
				<fluent-button class="btn-set" appearance="accent" @onclick=edit><svg width="24" height="24" fill="none" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M13.94 5 19 10.06 9.062 20a2.25 2.25 0 0 1-.999.58l-5.116 1.395a.75.75 0 0 1-.92-.921l1.395-5.116a2.25 2.25 0 0 1 .58-.999L13.938 5Zm7.09-2.03a3.578 3.578 0 0 1 0 5.06l-.97.97L15 3.94l.97-.97a3.578 3.578 0 0 1 5.06 0Z" fill="#ffffff" /></svg></fluent-button>
				<fluent-button class="btn-set" appearance="accent" @onclick=OpenDialog><svg width="24" height="24" fill="none" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M21.5 6a1 1 0 0 1-.883.993L20.5 7h-.845l-1.231 12.52A2.75 2.75 0 0 1 15.687 22H8.313a2.75 2.75 0 0 1-2.737-2.48L4.345 7H3.5a1 1 0 0 1 0-2h5a3.5 3.5 0 1 1 7 0h5a1 1 0 0 1 1 1Zm-7.25 3.25a.75.75 0 0 0-.743.648L13.5 10v7l.007.102a.75.75 0 0 0 1.486 0L15 17v-7l-.007-.102a.75.75 0 0 0-.743-.648Zm-4.5 0a.75.75 0 0 0-.743.648L9 10v7l.007.102a.75.75 0 0 0 1.486 0L10.5 17v-7l-.007-.102a.75.75 0 0 0-.743-.648ZM12 3.5A1.5 1.5 0 0 0 10.5 5h3A1.5 1.5 0 0 0 12 3.5Z" fill="#ffffff" /></svg></fluent-button>
				
				<fluent-dialog Hidden="@ModelHidden">
					<div class="d-flex justify-content-center align-items-center h-100 w-100 flex-column">
						<svg id="Layer_1" style="width: 20%" class="pb-5" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 105.16 122.88"><defs><style>.cls-1{fill-rule:evenodd;}</style></defs><title>delete</title><path class="cls-1" d="M11.17,37.16H94.65a8.4,8.4,0,0,1,2,.16,5.93,5.93,0,0,1,2.88,1.56,5.43,5.43,0,0,1,1.64,3.34,7.65,7.65,0,0,1-.06,1.44L94,117.31v0l0,.13,0,.28v0a7.06,7.06,0,0,1-.2.9v0l0,.06v0a5.89,5.89,0,0,1-5.47,4.07H17.32a6.17,6.17,0,0,1-1.25-.19,6.17,6.17,0,0,1-1.16-.48h0a6.18,6.18,0,0,1-3.08-4.88l-7-73.49a7.69,7.69,0,0,1-.06-1.66,5.37,5.37,0,0,1,1.63-3.29,6,6,0,0,1,3-1.58,8.94,8.94,0,0,1,1.79-.13ZM5.65,8.8H37.12V6h0a2.44,2.44,0,0,1,0-.27,6,6,0,0,1,1.76-4h0A6,6,0,0,1,43.09,0H62.46l.3,0a6,6,0,0,1,5.7,6V6h0V8.8h32l.39,0a4.7,4.7,0,0,1,4.31,4.43c0,.18,0,.32,0,.5v9.86a2.59,2.59,0,0,1-2.59,2.59H2.59A2.59,2.59,0,0,1,0,23.62V13.53H0a1.56,1.56,0,0,1,0-.31v0A4.72,4.72,0,0,1,3.88,8.88,10.4,10.4,0,0,1,5.65,8.8Zm42.1,52.7a4.77,4.77,0,0,1,9.49,0v37a4.77,4.77,0,0,1-9.49,0v-37Zm23.73-.2a4.58,4.58,0,0,1,5-4.06,4.47,4.47,0,0,1,4.51,4.46l-2,37a4.57,4.57,0,0,1-5,4.06,4.47,4.47,0,0,1-4.51-4.46l2-37ZM25,61.7a4.46,4.46,0,0,1,4.5-4.46,4.58,4.58,0,0,1,5,4.06l2,37a4.47,4.47,0,0,1-4.51,4.46,4.57,4.57,0,0,1-5-4.06l-2-37Z"/></svg>
					<h5 class="text-center pb-3">Opravdu si přejete smazat kapitolu @kapitola.Název ?</h5>
					<div>
						<fluent-button class="dialog-btn" @onclick="CloseDialog">Zavřít</fluent-button>
						<fluent-button appearance="accent" class="dialog-btn" Disabled="@vypnutiTlacitka" @onclick="DeleteKapitola">Smazat</fluent-button>
					</div>
					</div>
				</fluent-dialog>
						<fluent-dialog Hidden="@ModelHiddenError">
							<div class="d-flex justify-content-center align-items-center h-100 w-100 flex-column">
								<?xml version="1.0" encoding="iso-8859-1"?>

<svg version="1.1" class="pb-3" id="Capa_1"xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
	 viewBox="0 0 177.055 177.055" style="enable-background:new 0 0 177 177; width: 20%" xml:space="preserve">
<path d="M0.001,88.527c0,48.814,39.713,88.527,88.527,88.527c48.813,0,88.526-39.713,88.526-88.527S137.341,0,88.528,0
	C39.714,0,0.001,39.713,0.001,88.527z M88.528,24.304c35.413,0,64.224,28.811,64.224,64.224c0,13.324-4.081,25.712-11.055,35.983
	L52.544,35.359C62.816,28.385,75.204,24.304,88.528,24.304z M124.511,141.696c-10.272,6.974-22.659,11.055-35.983,11.055
	c-35.413,0-64.223-28.811-64.223-64.224c0-13.324,4.081-25.711,11.054-35.983L124.511,141.696z"/>
</svg>

								<h5 class="text-center">Kapitola @kapitola.Název nelze smazat!</h5>
								<p class="text-center">Kapitola je již použita jako prerekvizita pro jiné kapitoly!<br> Nejdřív vymažte navázané kapitoly!</p>
								<div>
									<fluent-button appearance="accent" class="dialog-btn" @onclick="CloseDialog2">Zavřít</fluent-button>
								</div>
							</div>
						</fluent-dialog>
			</div>
			   }			
			</div>
			<h5 class="pb-3">@kapitola.Perex</h5>
			<p class="pb-3 obsah">@((MarkupString)kapitola.Kontent)</p>
			@if (@kapitola.Videa.Count() > 0)
				   {
			<h3 class="pb-3">Videa:</h3>		
				<div class="row">	
					@if (rozstridOdkazy > 0)
				   {
					   resetOdkazy();
				   }				
					   @foreach (Videa video in @kapitola.Videa)				
					{
						rozstridOdkazy++;
						if(video.Nazev == null) {
							switch(rozstridOdkazy) {
								case 1:
								<div class="col col-md-4"><a href="@video.Odkaz" target="_blank">odkaz</a></div>
								break;								
								case 2:
									<div class="col col-md-4 text-center"><a href="@video.Odkaz" target="_blank">odkaz</a></div>
								break;
								case 3:
									<div class="col col-md-4 text-end"><a href="@video.Odkaz" target="_blank">odkaz</a></div>
									rozstridOdkazy = 0;
									break;
							}							
						}
						else {						
							switch(rozstridOdkazy) {
								case 1:
								<div class="col col-md-4"><a href="@video.Odkaz" target="_blank">@video.Nazev</a></div>
								break;								
								case 2:
									<div class="col col-md-4 text-center"><a href="@video.Odkaz" target="_blank">@video.Nazev</a></div>
								break;
								case 3:
									<div class="col col-md-4 text-end"><a href="@video.Odkaz" target="_blank">@video.Nazev</a></div>
									rozstridOdkazy = 0;
									break;
							}
						}
						
					}						   											
				</div>			   
			<hr class="pb-3" />
				   }
			<div class="d-flex justify-content-center align-items-center flex-column w-100">
			<fluent-button class="main-btn" Disabled="@status" appearance="accent">Vzít cvičení</fluent-button>
			<div class="popis text-center pb-3">
				<!--<p class="h5">0/1</p>-->
				<p>Při potvrzení tlačítka Vám bude odesláno cvičení na dané téma ve formě testu. Po následné korekci Vašeho testu bude zpřístupněna další kapitola.</p>
			</div>
			<fluent-anchor href="#" appearance="stealth" class="d-flex justify-content-center">zpátky<svg width="24" height="24" fill="none" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M7 5a1 1 0 0 1 1-1h5c2.242 0 4.01.778 5.218 2.023C19.414 7.256 20 8.887 20 10.5c0 1.613-.586 3.244-1.782 4.477C17.01 16.222 15.242 17 13 17H8.414l2.043 2.043a1 1 0 0 1-1.414 1.414l-3.75-3.75a1 1 0 0 1 0-1.414l3.75-3.75a1 1 0 0 1 1.414 1.414L8.414 15H13c1.758 0 2.99-.597 3.782-1.415.804-.83 1.218-1.948 1.218-3.085s-.414-2.256-1.218-3.085C15.99 6.597 14.758 6 13 6H8a1 1 0 0 1-1-1Z" fill="#212121" /></svg></fluent-anchor>
		</div>			
		</div>

	</div>
}
<style>
.ql-align-center {
	text-align: center;
}
.ql-align-right {
	text-align: right;
}

.ql-align-justify {
	text-align: justify;
}
.btn-set:hover svg {
	transform: scale(1.2);
	transition: 0.3s;
}
</style>
@code {

	[Parameter]
	public int IdKapitola { get; set; }
	[Parameter]
	public bool status { get; set; }

	private Skupina skupina = new Skupina();
	private vyukovy_pavouk.Data.Kapitola kapitola { get; set; }
	private List<KapitolaPrerekvizita> prerekvizity = new List<KapitolaPrerekvizita>();
	private List<StudentSplneni> splneni = new List<StudentSplneni>();
	private bool IsLoaded = false;
	private bool ModelHidden { get; set; } = true;
	private bool ModelHiddenError { get; set; } = true;
	bool vypnutiTlacitka = false;
	int rozstridOdkazy = 0;

	@inject IToastService upozorneni;
	protected override async Task OnParametersSetAsync() {
		await CallApiKapitola();
	}
	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{
			await UserToken.GetUserAsync(sessionStorage);
			await GroupToken.GetGroupAsync(MicrosoftTeams);
			if (UserToken.Profile == null)
			{
				MyNavigationManager.NavigateTo("/tab");
			}
			else
			{
				//pokud by se náhodou nevyvolala dřív OnParametersSetAsync vyvolám ho zde 
				if(kapitola == null) {
					await CallApiKapitola();
				}
				if(UserToken.Profile.JobTitle == null) {
					skupina = await Http.GetFromJsonAsync<Skupina>($"{MyNavigationManager.BaseUri}api/Skupina/" + (GroupToken.teamsContext.TeamId).ToString());
					prerekvizity = await Http.GetFromJsonAsync<List<KapitolaPrerekvizita>>($"{MyNavigationManager.BaseUri}api/Kapitoly/prerekvizity/" + (skupina.IDPredmetu));
				}
				IsLoaded = true;
			}
			StateHasChanged();
		}
	}
	private async Task CallApiKapitola() {
		kapitola = await Http.GetFromJsonAsync<vyukovy_pavouk.Data.Kapitola>($"{MyNavigationManager.BaseUri}api/kapitola/" + IdKapitola);
	}
	private void CloseDialog() => ModelHidden = true;
	private void CloseDialog2() => ModelHiddenError = true;
	
	private void OpenDialog()  {
		bool NelzeSmazat = false;
		foreach (KapitolaPrerekvizita Kprerekvizita in prerekvizity)
		{
			if(Kprerekvizita.prerekvizita.IdPrerekvizity == kapitola.Id) {
				NelzeSmazat = true;
				ModelHiddenError = false;
				break;					
			}
		}
		if(!NelzeSmazat) {
			ModelHidden = false;

		}
	}

	private void edit() {
		MyNavigationManager.NavigateTo($"edit/{kapitola.Id}");
	}
	private async Task DeleteKapitola() {
		vypnutiTlacitka = true;
		//smazání samotné kapitoly 
		await Http.DeleteAsync($"{MyNavigationManager.BaseUri}api/kapitola/delete/{kapitola.Id}");
		//pokud jakýkoliv student má toto už splněno smaže se jeho splnění 
		//nejdříve zjistím všechny splnění ze skupiny 
		splneni = await Http.GetFromJsonAsync<List<StudentSplneni>>($"{MyNavigationManager.BaseUri}api/studenti/allSplneni/{skupina.Id}");
		//poté zkontroluju 

		foreach (StudentSplneni splneni in splneni)
		{
			//pokud je shoda ID kapitoly ve splneni a ID kapitoly této
			if(splneni.splneni.IdKapitoly == kapitola.Id) {
				await Http.DeleteAsync($"{MyNavigationManager.BaseUri}api/studenti/deleteSplneni/" + splneni.IdSplneni);
				break;
			}
		}
		MyNavigationManager.NavigateTo("/");
		upozorneni.ShowSuccess("Kapitola byla úspěšně vymazaná.", "Smazáno!");

	}
	private void resetOdkazy() {
		rozstridOdkazy = 0;
	}
}
