<fluent-dialog Hidden="@ModelHiddenInfo">
	<div class="d-flex justify-content-center align-items-center h-100 w-100 flex-column">
		<?xml version="1.0" encoding="iso-8859-1" ?>
		<svg version="1.1" class="pb-5" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
			 viewBox="0 0 460 460" style="enable-background:new 0 0 460 460; width: 20%;" xml:space="preserve">
<g id="XMLID_1055_">
		<g>
		<path d="M230,0C102.975,0,0,102.975,0,230s102.975,230,230,230s230-102.974,230-230S357.025,0,230,0z M268.333,377.36
			c0,8.676-7.034,15.71-15.71,15.71h-43.101c-8.676,0-15.71-7.034-15.71-15.71V202.477c0-8.676,7.033-15.71,15.71-15.71h43.101
			c8.676,0,15.71,7.033,15.71,15.71V377.36z M230,157c-21.539,0-39-17.461-39-39s17.461-39,39-39s39,17.461,39,39
			S251.539,157,230,157z" />
	</g>
	</g>
	</svg>
		<p class="text-center pb-3 px-4">@Info</p>
		<div>
			<fluent-button class="dialog-btn" appearance="accent" @onclick="CloseDialog">Zavřít</fluent-button>
		</div>
	</div>
</fluent-dialog>
<style>
	fluent-dialog {
		position: sticky;
		z-index: 11;
	}
	fluent-button {
		width: 100px;
		height: 50px;
	}
</style>
@code {
	[Parameter]
	public bool ModelHiddenInfo { get; set; }
	[Parameter]
	public string Info { get; set; }
	[Parameter]
	public EventCallback<bool> ModelHiddenInfoChanged { get; set; }


	private async Task CloseDialog()
	{
		ModelHiddenInfo = true;
		await ModelHiddenInfoChanged.InvokeAsync(ModelHiddenInfo);
	}
}
